import{m as e,l as t,n as a,o as l,q as s,s as n,t as o,u as r,v as i,w as p,T as c,H as d,x as u,y as h,z as g,A as m,D as S,F as I,G as f,J as v}from"./preset_utils-Dg0Pd4HA.chunk.js";import{Z as y,T as O,_ as R,$ as b,a0 as T,a1 as A,a2 as P,G as C,a3 as H,a4 as w,a5 as B,a6 as E,a7 as k,a8 as D,a9 as G,aa as L,ab as M,b as F,a as q,ac as x,ad as U,ae as V,af as N,ag as z,ah as W,ai as j,S as K,F as _,R as J}from"./detailed_results-D0NcuTaI.chunk.js";t({fieldName:"defensiveDelay",label:"Defensives Delay",labelTooltip:"Minimum delay between using more defensive cooldowns."});const Z={inputs:[a({fieldName:"presence",label:"Presence",labelTooltip:"Presence to be in during the encounter.",values:[{name:"Blood",value:y.Blood},{name:"Frost",value:y.Frost},{name:"Unholy",value:y.Unholy}],changeEmitter:e=>O.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"opener",label:"Opener",labelTooltip:"Chose what opener to perform:<br>\t\t\t\t<b>Regular</b>: Regular opener.<br>\t\t\t\t<b>Threat</b>: Full IT spam for max threat.",values:[{name:"Regular",value:R.Regular},{name:"Threat",value:R.Threat}],changeEmitter:e=>O.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"optimizationSetting",label:"Optimization Setting",labelTooltip:"Chose what metric to optimize:<br>\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.",values:[{name:"Hps",value:b.Hps},{name:"Tps",value:b.Tps}],changeEmitter:e=>O.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"bloodSpell",label:"Blood Spell",labelTooltip:"Chose what blood rune spender to use.",values:[{name:"Blood Strike",value:T.BloodStrike},{name:"Blood Boil",value:T.BloodBoil},{name:"Heart Strike",value:T.HeartStrike}],changeEmitter:e=>O.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"bloodTapPrio",label:"Blood Tap",labelTooltip:"Chose how to use Blood Tap:<br>\t\t\t\t<b>Use as Defensive Cooldown</b>: Use as defined in Cooldowns (Requires T10 4pc).<br>\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.",values:[{name:"Use as Defensive Cooldown",value:A.Defensive},{name:"Offensive",value:A.Offensive}],changeEmitter:e=>O.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])})]},$={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-50s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-10s"}}},{action:{castSpell:{spellId:{spellId:46584}}},doAtValue:{const:{val:"-3s"}}},{action:{castSpell:{spellId:{spellId:57330}}},doAtValue:{const:{val:"-1s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"89s"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:81130}}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:55095}}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49222}}}]}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{auraIsActive:{auraId:{spellId:55233}}},castSpell:{spellId:{spellId:82176}}}},{action:{condition:{auraIsActive:{auraId:{spellId:96171}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},castSpell:{spellId:{spellId:47568}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:77535}}}}}]}},castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"1"}}}}]}},{not:{val:{spellCanCast:{spellId:{spellId:49998,tag:1}}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:45529}}},{castSpell:{spellId:{spellId:49998,tag:1}}}]}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}}]}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"2"}}}},castSpell:{spellId:{spellId:55050}}}},{hide:!0,action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRuneCount:{runeType:"RuneBlood"}},rhs:{const:{val:"1"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneFrost"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneUnholy"}},rhs:{const:{val:"0"}}}},{cmp:{op:"OpEq",lhs:{currentRuneCount:{runeType:"RuneDeath"}},rhs:{const:{val:"0"}}}}]}},castSpell:{spellId:{spellId:56815,tag:1}}}},{hide:!0,action:{condition:{cmp:{op:"OpLt",lhs:{auraRemainingTime:{auraId:{spellId:46584}}},rhs:{const:{val:"2s"}}}},castSpell:{spellId:{spellId:48743}}}},{action:{castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:57330}}}},{action:{castSpell:{spellId:{spellId:46584}}}}]},Q={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:48263}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:49222}}},doAtValue:{const:{val:"-60s"}}},{action:{castSpell:{spellId:{spellId:42650}}},doAtValue:{const:{val:"-10s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"20%"}}}},castSpell:{spellId:{spellId:48792}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"40%"}}}},castSpell:{spellId:{spellId:55233}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"60%"}}}},{not:{val:{auraIsActive:{auraId:{spellId:49222}}}}}]}},castSpell:{spellId:{spellId:49222}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"80%"}}}},castSpell:{spellId:{spellId:48982}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:48743}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentHealthPercent:{}},rhs:{const:{val:"50%"}}}},castSpell:{spellId:{itemId:65109}}}},{action:{condition:{or:{vals:[{not:{val:{dotIsActive:{spellId:{spellId:55095}}}}},{not:{val:{dotIsActive:{spellId:{spellId:55078}}}}}]}},castSpell:{spellId:{spellId:77575}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"120"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{castSpell:{spellId:{spellId:49998,tag:1}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{nextRuneCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"2s"}}}},castSpell:{spellId:{spellId:55050}}}},{action:{castSpell:{spellId:{spellId:46584}}}},{action:{condition:{auraIsActive:{auraId:{spellId:81141}}},castSpell:{spellId:{spellId:48721}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRunicPower:{}},rhs:{const:{val:"80"}}}},castSpell:{spellId:{spellId:56815,tag:1}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{runeCooldown:{runeType:"RuneBlood"}},rhs:{const:{val:"1s"}}}},castSpell:{spellId:{spellId:45529}}}}]},X={items:[{id:65186,enchant:4206,gems:[52294,52231],reforging:126},{id:60227,gems:[52231],reforging:122},{id:65188,enchant:4198,gems:[52221],reforging:126},{id:69878,randomSuffix:-128,enchant:1354,reforging:122},{id:65184,enchant:4103,gems:[52221,52242],reforging:129},{id:60228,enchant:3850,gems:[52242,0],reforging:147},{id:65185,enchant:4121,gems:[52242,0],reforging:132},{id:65370,randomSuffix:-226,gems:[52221,52242],reforging:125},{id:65182,enchant:4270,gems:[52242,52242]},{id:60229,enchant:4062,gems:[52221,52242],reforging:126},{id:65372,randomSuffix:-128,reforging:125},{id:60226,gems:[52242],reforging:146},{id:65048},{id:62471},{id:65003,enchant:3847,reforging:147},{},{id:64676,gems:[52242],reforging:122}]},Y=l("Pre-Raid",{items:[{id:59359,enchant:4206,gems:[52294,59480,59493]},{id:56319,reforging:129},{id:56318,enchant:4198,gems:[52221]},{id:62383,enchant:4100,reforging:122},{id:55058,enchant:4103,gems:[52242],reforging:133},{id:57870,enchant:3850,gems:[52231,0]},{id:56428,enchant:4121,gems:[52221,0],reforging:129},{id:55059,gems:[52242,52242],reforging:122},{id:58102,enchant:4270,gems:[52231,52242],reforging:126},{id:62418,enchant:4062,gems:[52242],reforging:132},{id:56444},{id:62440},{id:58483,gems:[52242]},{id:56347},{id:56342,enchant:3847,reforging:151},{},{id:62243,gems:[52242],reforging:139}]}),ee=l("P1",X),te=s("Simple",Q),ae=s("Defensive",$),le={name:"Blood",data:P.create({talentsString:"03323200132222311321-2-003",glyphs:C.create({prime1:H.GlyphOfDeathStrike,prime2:H.GlyphOfHeartStrike,prime3:H.GlyphOfRuneStrike,major1:w.GlyphOfAntiMagicShell,major2:w.GlyphOfDancingRuneWeapon,major3:w.GlyphOfBoneShield,minor1:B.GlyphOfDeathGate,minor2:B.GlyphOfPathOfFrost,minor3:B.GlyphOfHornOfWinter})})},se=E.create({classOptions:{startingRunicPower:0}}),ne=k.create({flask:D.FlaskOfSteelskin,food:G.FoodBeerBasedCrocolisk,defaultPotion:L.GolembloodPotion,prepopPotion:L.GolembloodPotion,tinkerHands:M.TinkerHandsSynapseSprings}),oe={profession1:F.Engineering,profession2:F.Leatherworking,distanceFromTarget:5},re=n(K.SpecBloodDeathKnight,{cssClass:"blood-death-knight-sim-ui",cssScheme:q.getCssClass(q.DeathKnight),knownIssues:[],epStats:[x.StatStamina,x.StatStrength,x.StatAgility,x.StatAttackPower,x.StatExpertise,x.StatMeleeHit,x.StatMeleeCrit,x.StatMeleeHaste,x.StatSpellHit,x.StatSpellCrit,x.StatSpellHaste,x.StatHealth,x.StatArmor,x.StatBonusArmor,x.StatDodge,x.StatParry,x.StatSpellHit,x.StatNatureResistance,x.StatShadowResistance,x.StatFrostResistance,x.StatMastery],epPseudoStats:[U.PseudoStatMainHandDps,U.PseudoStatOffHandDps],epReferenceStat:x.StatAttackPower,displayStats:[x.StatHealth,x.StatArmor,x.StatStamina,x.StatStrength,x.StatAgility,x.StatAttackPower,x.StatExpertise,x.StatSpellHit,x.StatSpellCrit,x.StatMeleeHit,x.StatMeleeCrit,x.StatMeleeHaste,x.StatDodge,x.StatParry,x.StatMastery],defaults:{gear:ee.gear,epWeights:V.fromMap({[x.StatArmor]:.05,[x.StatBonusArmor]:.03,[x.StatStamina]:1,[x.StatStrength]:.33,[x.StatAgility]:.6,[x.StatAttackPower]:.06,[x.StatExpertise]:.67,[x.StatMeleeHit]:.67,[x.StatMeleeCrit]:.28,[x.StatMeleeHaste]:.21,[x.StatDodge]:.7,[x.StatParry]:.58},{[U.PseudoStatMainHandDps]:3.1,[U.PseudoStatOffHandDps]:0}),other:oe,consumes:ne,talents:le.data,specOptions:se,raidBuffs:N.create({retributionAura:!0,powerWordFortitude:!0,markOfTheWild:!0,icyTalons:!0,hornOfWinter:!0,abominationsMight:!0,leaderOfThePack:!0,bloodlust:!0,arcaneTactics:!0,devotionAura:!0,resistanceAura:!0}),partyBuffs:z.create({}),individualBuffs:W.create({}),debuffs:j.create({bloodFrenzy:!0,sunderArmor:!0,ebonPlaguebringer:!0,criticalMass:!0,vindication:!0,frostFever:!0,judgement:!0})},playerIconInputs:[],rotationInputs:Z,includeBuffDebuffInputs:[o],excludeBuffDebuffInputs:[r,i],otherInputs:{inputs:[p,c,d,u,h,g,m,S,I,e({fieldName:"startingRunicPower",label:"Starting Runic Power",labelTooltip:"Initial RP at the start of each iteration."}),f]},encounterPicker:{showExecuteProportion:!1},presets:{rotations:[te,ae],talents:[le],gear:[Y,ee]},autoRotation:e=>te.rotation.rotation,raidSimPresets:[{spec:K.SpecBloodDeathKnight,talents:le.data,specOptions:se,consumes:ne,defaultFactionRaces:{[_.Unknown]:J.RaceUnknown,[_.Alliance]:J.RaceWorgen,[_.Horde]:J.RaceTroll},defaultGear:{[_.Unknown]:{},[_.Alliance]:{1:ee.gear,2:ee.gear,3:ee.gear,4:ee.gear},[_.Horde]:{1:ee.gear,2:ee.gear,3:ee.gear,4:ee.gear}},otherDefaults:oe}]});class ie extends v{constructor(e,t){super(e,t,re)}}export{ie as B};
